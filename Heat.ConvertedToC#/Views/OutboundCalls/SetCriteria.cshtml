@model Heat.ViewModels.OutboundCalls.CriteriaViewModel

@{
    ViewBag.Title = "SetCriteria";
}

<h2>SetCriteria</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>CriteriaViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.CallsNumber , htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CallsNumber ,  new { @htmlAttributes =   new { @class = "form-control" }})
                @Html.ValidationMessageFor(model => model.CallsNumber , "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.SelectedCAP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedCAP, Model.CAPList, new { @class="form-control"})
                @Html.ValidationMessageFor(model => model.SelectedCAP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedCity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedCity, Model.CityList, new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.SelectedCity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlantClassSelected , htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PlantClassSelected, Model.PlantClassList , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PlantClassSelected, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlantTypeSelected, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PlantTypeSelected, Model.PlantTypeList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PlantTypeSelected, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.DaysInFuture, htmlAttributes: new { @class="control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model=> model.DaysInFuture, new  { @htmlAttributes = new  { @class = "form-control" } } )
                @Html.ValidationMessageFor(model => model.DaysInFuture, "", new {  @class="text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
